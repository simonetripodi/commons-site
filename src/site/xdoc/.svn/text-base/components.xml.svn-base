<?xml version="1.0"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<document>
 <properties>
  <title>Components</title>
  <author email="dev@commons.apache.org">Commons Documentation Team</author>
 </properties>

 <body>

  <section name="Introduction">
   <p>
    The <em>Apache Commons</em> project differs from many other Apache
    hosted projects because it is comprised of multiple, independently
    released packages. This page provides an overview of the
    <em>Commons</em> components that are currently available.
   </p>
  </section>

  <section name="Released Components">
     <table>
        <!-- This list should agree with ../site.xml and index.xml and downloads/index.xml-->
        <tr><th>Components</th><th></th></tr>
        <tr><td><a href="attributes/">Attributes</a></td>
            <td>Runtime API to metadata attributes such as doclet tags.</td></tr>
        <tr><td><a href="bcel/">BCEL</a></td>
            <td>Byte Code Engineering Library - analyze, create, and manipulate Java class files</td></tr>
        <tr><td><a href="beanutils/">BeanUtils</a></td>
            <td>Easy-to-use wrappers around the Java reflection and introspection APIs.</td></tr>
        <tr><td><a href="betwixt/">Betwixt</a></td>
            <td>Services for mapping JavaBeans to XML documents, and vice versa.</td></tr>
        <tr><td><a href="bsf/">BSF</a></td>
            <td>Bean Scripting Framework - interface to scripting languages, including JSR-223</td></tr>
        <tr><td><a href="chain/">Chain</a></td>
            <td><i>Chain of Responsibility</i> pattern implemention.</td></tr>
        <tr><td><a href="cli/">CLI</a></td>
            <td> Command Line arguments parser.</td></tr>
        <tr><td><a href="codec/">Codec</a></td>
            <td>General encoding/decoding algorithms (for example phonetic, base64, URL).</td></tr>
        <tr><td><a href="collections/">Collections</a></td>
            <td>Extends or augments the Java Collections Framework.</td></tr>
        <tr><td><a href="compress/">Compress</a></td>
            <td>Defines an API for working with tar, zip and bzip2 files.</td></tr>
        <tr><td><a href="configuration/">Configuration</a></td>
            <td>Reading of configuration/preferences files in various formats.</td></tr>
        <tr><td><a href="csv/">CSV</a></td>
            <td>Component for reading and writing comma separated value files.</td></tr>
        <tr><td><a href="daemon/">Daemon</a></td>
            <td>Alternative invocation mechanism for unix-daemon-like java code.</td></tr>
        <tr><td><a href="dbcp/">DBCP</a></td>
            <td>Database connection pooling services.</td></tr>
        <tr><td><a href="dbutils/">DbUtils</a></td>
            <td>JDBC helper library.</td></tr>
        <tr><td><a href="digester/">Digester</a></td>
            <td>XML-to-Java-object mapping utility.</td></tr>
        <tr><td><a href="discovery/">Discovery</a></td>
            <td>Tools for locating resources by mapping service/reference names to resource names.</td></tr>
        <tr><td><a href="el/">EL</a></td>
            <td>Interpreter for the Expression Language defined by the JSP 2.0 specification.</td></tr>
        <tr><td><a href="email/">Email</a></td>
            <td>Library for sending e-mail from Java.</td></tr>
        <tr><td><a href="exec/">Exec</a></td>
            <td>API for dealing with external process execution and environment management in Java.</td></tr>
        <tr><td><a href="fileupload/">FileUpload</a></td>
            <td>File upload capability for your servlets and web applications.</td></tr>
        <tr><td><a href="functor/">Functor</a></td>
            <td>A functor is a function that can be manipulated as an object, or an object representing a single, generic function.</td></tr>
        <tr><td><a href="imaging">Imaging (previously called Sanselan)</a></td>
            <td> A pure-Java image library.</td></tr>
        <tr><td><a href="io/">IO</a></td>
            <td>Collection of I/O utilities.</td></tr>
        <tr><td><a href="jci/">JCI</a></td>
            <td>Java Compiler Interface</td></tr>
        <tr><td><a href="jcs/">JCS</a></td>
            <td>Java Caching System</td></tr>
        <tr><td><a href="jelly/">Jelly</a></td>
            <td>XML based scripting and processing engine.</td></tr>
        <tr><td><a href="jexl/">Jexl</a></td>
            <td> Expression language which extends the Expression Language of the JSTL.</td></tr>
        <tr><td><a href="jxpath/">JXPath</a></td>
            <td> Utilities for manipulating Java Beans using the XPath syntax.</td></tr>
        <tr><td><a href="lang/">Lang</a></td>
            <td>Provides extra functionality for classes in java.lang.</td></tr>
        <tr><td><a href="launcher/">Launcher</a></td>
            <td>Cross platform Java application launcher.</td></tr>
        <tr><td><a href="logging/">Logging</a></td>
            <td>Wrapper around a variety of logging API implementations.</td></tr>
        <tr><td><a href="math/">Math</a></td>
            <td>Lightweight, self-contained mathematics and statistics components.</td></tr>
        <tr><td><a href="modeler/">Modeler</a></td>
            <td>Mechanisms to create Model MBeans compatible with JMX specification.</td></tr>
        <tr><td><a href="net/">Net</a></td>
            <td>Collection of network utilities and protocol implementations.</td></tr>
        <tr><td><a href="ognl/">OGNL</a></td>
            <td>An Object-Graph Navigation Language</td></tr>                        
        <tr><td><a href="pool/">Pool</a></td>
            <td>Generic object pooling component.</td></tr>
        <tr><td><a href="primitives/">Primitives</a></td>
            <td>Smaller, faster and easier to work with types supporting Java primitive types.</td></tr>
        <tr><td><a href="proxy/">Proxy</a></td>
            <td> Library for creating dynamic proxies.</td></tr>
        <tr><td><a href="imaging">Sanselan (now called Imaging)</a></td>
            <td> A pure-Java image library.</td></tr>
        <tr><td><a href="scxml/">SCXML</a></td>
            <td>An implementation of the State Chart XML specification aimed at creating and maintaining a Java SCXML engine. It is capable of executing a state machine defined using a SCXML document, and abstracts out the environment interfaces.</td></tr>
        <tr><td><a href="transaction/">Transaction</a></td>
            <td>Implementations for multi level locks, transactional collections and transactional file access.</td></tr>
        <tr><td><a href="validator/">Validator</a></td>
            <td>Framework to define validators and validation rules in an xml file.</td></tr>
        <tr><td><a href="vfs/">VFS</a></td>
            <td>Virtual File System component for treating files, FTP, SMB, ZIP and such like as a single logical file system.</td></tr>
     </table>
  </section>

  <section name="Elsewhere at Apache">
   <p>
     The following components were part of Apache Commons but have moved elsewhere:
     <ul>
       <li>
         <a href="http://incubator.apache.org/projects/altrmi/"><b>AltRMI</b></a>:
          AltRMI is a from-scratch replacement for RMI. It has a number of 
          different features that make it easier to use. It tries as far as 
          possible to be transparent in use.
       </li>

       <li>
         <a href="http://jakarta.apache.org/cactus/"><b>Cactus</b></a>:
         Cactus is a simple test framework for unit testing server-side java 
         code (Servlets, EJBs, Tag Libs, Filters, ...).
         The intent of Cactus is to lower the cost of writing tests for 
         server-side code.
       </li>

       <li>
         <a href="http://hivemind.apache.org/"><b>HiveMind</b></a>:
         HiveMind is a services and configuration microkernel. HiveMind allows
         you to create your application using a service oriented architecture.
       </li>

       <li>
         <a href="http://hc.apache.org/httpclient-3.x/"><b>HttpClient 3.x</b></a>:
         Framework for working with the client-side of the HTTP protocol.
       </li>

       <li>
         <a href="http://directory.apache.org/"><b>Naming</b></a>:
         The Naming subproject will contain common JNDI code along
         with various JNDI providers.
       </li>

     </ul>
   </p>
  </section>

 </body>
</document>
